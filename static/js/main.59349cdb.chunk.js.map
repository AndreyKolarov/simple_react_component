{"version":3,"sources":["logo.svg","component/Login.js","component/Signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onValidate","user","state","username","pwd","password","setState","isOK","isError","length","nameChanged","e","target","value","pwdChanged","react_default","a","createElement","className","class","type","placeholder","onChange","onClick","props","onRegister","colspan","Component","Signup","onBack","App","isNew","src","logo","alt","component_Signup","src_component_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59349cdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, {Component} from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      username:\"\",\r\n      password:\"\",\r\n      isOK: false,\r\n      isError: \"\"\r\n    }\r\n  }\r\n  onValidate = () => {\r\n    let user = this.state.username;\r\n    let pwd = this.state.password;\r\n    if(user === \"\" || pwd === \"\"){\r\n      this.setState({isOK: false});\r\n      this.setState({isError: \"Fill all gaps.\"});\r\n    }else if(pwd.length<6){\r\n      this.setState({isOK: false});\r\n      this.setState({isError: \"Password should be over 6 characters.\"});\r\n    }\r\n  }\r\n  nameChanged = e => {\r\n    this.setState({username: e.target.value});\r\n  }\r\n  pwdChanged = e =>{\r\n    this.setState({password:e.target.value});\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"LoginFormApp\">\r\n        <div className=\"LoginForm\">\r\n          <h1>L O G I N</h1>\r\n          <table class=\"loginTable\">\r\n            <tr>\r\n              <td>Username:</td>\r\n              <td><input type=\"text\" placeholder=\"Username\" onChange={this.nameChanged}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Password:</td>\r\n              <td><input type=\"password\" placeholder=\"Password\" onChange={this.pwdChanged}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              <td>\r\n                <button onClick={this.onValidate}>Login</button>\r\n                <button onClick={this.props.onRegister}>Signup</button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colspan=\"2\"> \r\n                {this.state.isOK === false ? <p>{this.state.isError}</p> : <p>Please wait...</p>}\r\n              </td>\r\n              \r\n            </tr>\r\n          </table>\r\n          \r\n          \r\n        </div>      \r\n\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Login;\r\n","import React, {Component} from 'react';\r\nimport './Login.css';\r\n\r\nclass Signup extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      username:\"\",\r\n      password:\"\",\r\n      isOK: false,\r\n      isError: \"\"\r\n    }\r\n  }\r\n  onValidate = () => {\r\n    let user = this.state.username;\r\n    let pwd = this.state.password;\r\n    if(user === \"\" || pwd === \"\"){\r\n      this.setState({isOK: false});\r\n      this.setState({isError: \"Fill all gaps.\"});\r\n    }else if(pwd.length<6){\r\n      this.setState({isOK: false});\r\n      this.setState({isError: \"Password should be over 6 characters.\"});\r\n    }\r\n  }\r\n  nameChanged = e => {\r\n    this.setState({username: e.target.value});\r\n  }\r\n  pwdChanged = e =>{\r\n    this.setState({password:e.target.value});\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"LoginFormApp\">\r\n        <div className=\"LoginForm\">\r\n          <h1>SIGN UP</h1>\r\n          <table class=\"loginTable\">\r\n            <tr>\r\n              <td>Username:</td>\r\n              <td><input type=\"text\" placeholder=\"Username\" onChange={this.nameChanged}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Password:</td>\r\n              <td><input type=\"password\" placeholder=\"Password\" onChange={this.pwdChanged}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              <td>\r\n                <button onClick={this.onValidate}>Register</button>\r\n                <button onClick={this.props.onBack}>Back</button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colspan=\"2\"> \r\n                {this.state.isOK === false ? <p>{this.state.isError}</p> : <p>Please wait...</p>}\r\n              </td>\r\n              \r\n            </tr>\r\n          </table>\r\n          \r\n          \r\n        </div>      \r\n\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Signup;\r\n","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\n//import Comtest from './Comtest';\r\n//import Todos from './Todos';\r\nimport Login from './component/Login';\r\nimport Signup from './component/Signup';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      isNew:false\r\n    }\r\n  }\r\n  onRegister = () =>{\r\n    this.setState({isNew: true});\r\n  }\r\n  onBack = () => {\r\n    this.setState({isNew: false});\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        {/* <Comtest />\r\n        <Todos /> */}\r\n        {this.state.isNew === true ? <Signup /> : <Login />}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}